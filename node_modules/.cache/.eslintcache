[{"D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\index.js":"1","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\App.js":"2","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\reportWebVitals.js":"3","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\Sidebar.jsx":"4","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\Chat.jsx":"5","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\AppPanel.jsx":"6","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\AlgoChoice.jsx":"7","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\InputBar.jsx":"8","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\Conversation.jsx":"9","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\History.jsx":"10","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\MessageBubbleRight.jsx":"11","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\MessageBubbleLeft.jsx":"12","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\HistoryTab.jsx":"13"},{"size":512,"mtime":1683127027804,"results":"14","hashOfConfig":"15"},{"size":2181,"mtime":1683303530751,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1682929756788,"results":"17","hashOfConfig":"15"},{"size":1512,"mtime":1683295845121,"results":"18","hashOfConfig":"15"},{"size":928,"mtime":1683302315589,"results":"19","hashOfConfig":"15"},{"size":513,"mtime":1683278953178,"results":"20","hashOfConfig":"15"},{"size":718,"mtime":1683294075990,"results":"21","hashOfConfig":"15"},{"size":1379,"mtime":1683302315592,"results":"22","hashOfConfig":"15"},{"size":1601,"mtime":1683304622097,"results":"23","hashOfConfig":"15"},{"size":1243,"mtime":1683303684589,"results":"24","hashOfConfig":"15"},{"size":280,"mtime":1683030341029,"results":"25","hashOfConfig":"15"},{"size":248,"mtime":1683030341029,"results":"26","hashOfConfig":"15"},{"size":1245,"mtime":1683302818799,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1utqdnz",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\index.js",[],[],"D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\App.js",["76","77","78","79","80","81","82","83"],[],"import React, { useState, useEffect, Link } from 'react'\r\nimport Sidebar from './component/Sidebar';\r\nimport './style.scss';\r\nimport Chat from './component/Chat';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport AppPanel from './component/AppPanel';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nexport const useData = (url) => {\r\n  const [state, setState] = useState();\r\n\r\n  useEffect(() => {\r\n    const dataFetch = async () => {\r\n      const data = await (await fetch(url)).json();\r\n\r\n      setState(data);\r\n    };\r\n\r\n    dataFetch();\r\n  }, [url]);\r\n\r\n  return { data: state };\r\n};\r\n\r\nfunction App() {\r\n  const current = new Date();\r\n  const time = current.toLocaleTimeString(\"en-US\");\r\n\r\n  const[data, setData] = useState([]);\r\n  const[def, setDef] = useState([]);\r\n  const[req, setReq] = useState('');\r\n  //const API = 'http://localhost:3000/ChatHistory'\r\n  const API = 'chat'\r\n  \r\n  // const {template} = useData(API);\r\n  // const {data} = template.history;\r\n\r\n  //const dispatch = useDispatch();\r\n\r\n  // const fetchLoad = (req) => {\r\n  //   setReq(req);\r\n  //   dispatch(debouncedSearch(req));\r\n  // }\r\n\r\n  useEffect(() => {\r\n    const dataFetch = async () => {\r\n      const fetched = await (await fetch(API)).json();\r\n\r\n      setData(fetched.history);\r\n      setDef(fetched);\r\n    }\r\n    dataFetch();\r\n    console.log(data);\r\n  }, []);\r\n\r\n  if(data){\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <div className='container'> */}\r\n          {/* <Sidebar/> */}\r\n          <Router>\r\n            <Routes>\r\n              \r\n              {\r\n                data && data.map((item) => {\r\n                  // return <Route path={\"/\" + item.id} element={<Chat chatID={item.id}/>}/>\r\n                  return <Route key={item.id} path={`/${item.id}`} element={<AppPanel chatHistory={item}/>}/>\r\n                  \r\n                })\r\n              }\r\n              <Route path='/' element={<AppPanel chatHistory={def}/>}/>\r\n            </Routes>\r\n          </Router>\r\n        {/* </div> */}\r\n      </div>\r\n    );\r\n  }\r\n  // console.log(\"Failed to get Data\")\r\n  // fetchHistory()\r\n  // return <p>Loading...</p>\r\n  \r\n}\r\n\r\nexport default App;","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\reportWebVitals.js",[],[],"D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\Sidebar.jsx",["84","85","86"],[],"import React from 'react'\r\nimport AlgoChoice from './AlgoChoice'\r\nimport History from './History'\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Sidebar({chatHistory, algorithm}) {\r\n  const[algo, setAlgo] = useState('');\r\n  const[data, setData] = useState([]);\r\n\r\n  const API = 'chat'\r\n  const APIput = API + '/add_chat'\r\n  const fetchHistory = () => {\r\n    fetch(API).then((res) => {\r\n      //console.log(\"Ini data fetch sebelum jadi json: \" + res);\r\n      return res.json();\r\n    }).then((resAfter) => {\r\n      // console.log(\"Ini data fetch setelah jadi json: \" + res);\r\n      setData(resAfter.history);\r\n      console.log(data.id)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    //console.log(\"use effect in progress\")\r\n    const dataFetch = async () => {\r\n      const fetched = await (await fetch(API)).json();\r\n\r\n      setData(fetched.history);\r\n      console.log(data.id);\r\n    }\r\n    //dataFetch();\r\n    fetchHistory()\r\n  }, []);\r\n\r\n  const algoData = (data) => {\r\n    setAlgo(data);\r\n    algorithm(data);\r\n    console.log(\"Algoritma yang dipakai: \" + data);\r\n  }\r\n\r\n  const createSession = async () => {\r\n    await fetch(APIput, {\r\n      method: 'PUT',\r\n      headers: {\"Content-Type\" : \"application/json\"}\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='sidebar'>\r\n        <History chatHistory={chatHistory}/>\r\n        <div className='flex-container'></div>\r\n        <button onClick={createSession}>+</button>\r\n        <AlgoChoice algoData={algoData}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\Chat.jsx",["87","88","89","90"],[],"import React, { useEffect } from 'react'\r\nimport InputBar from './InputBar'\r\nimport Conversation from './Conversation'\r\nimport { useState } from 'react'\r\n\r\nfunction Chat({chatID, algo}) {\r\n  \r\n  const[data, setData] = useState('');\r\n  const[trigger, setTrigger] = useState(0);\r\n\r\n  const parentToChild = () => {\r\n    setData()\r\n  }\r\n\r\n  const childToParent = (childData) => {\r\n    setData(childData);\r\n    //alert(childData);\r\n  }\r\n\r\n  // if(chatID === 0){\r\n  //   return <p>WELCOME BOIS</p>\r\n  // }\r\n\r\n  const triggerSignal = (trig) => {\r\n    setTrigger((trig) => trig + 1)\r\n    console.log(\"THERES A CHANGE\")\r\n  }\r\n\r\n  // useEffect(() =>{\r\n  //   console.log(\"THERES A CHANGE\")\r\n  // }, [trigger])\r\n\r\n  return (\r\n    <div className='chat'>\r\n        <Conversation chatID={chatID} triggerSignal={trigger}/>\r\n        <InputBar chatID={chatID} algo={algo} triggerSignal={triggerSignal}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\AppPanel.jsx",[],[],"D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\AlgoChoice.jsx",["91","92"],[],"import React, { useEffect, useState } from 'react'\r\n\r\nfunction AlgoChoice({algoData}) {\r\n  const [algo, setAlgo] = useState('')\r\n\r\n  useEffect(() => {\r\n    algoData(\"KMP\");\r\n  })\r\n\r\n  return (\r\n    <div className='algoChoice'>\r\n        <hr className=\"solid\"></hr>\r\n        <div className='algo-buttons'>\r\n            <div className='KMPButton'>\r\n                <input type=\"radio\" value=\"KMP\" name=\"algo\" onChange={e => algoData(e.target.value)} defaultChecked/> KMP\r\n            </div>\r\n            <div className='BMButton'>\r\n                <input type=\"radio\" value=\"BM\" name=\"algo\" onChange={e => algoData(e.target.value)}/> BM\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlgoChoice","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\InputBar.jsx",["93","94","95","96","97"],[],"import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\nfunction InputBar({chatID, algo, triggerSignal}) {\r\n  const [dataAlgo, setDataAlgo] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [trigger, setTrigger] = useState(0);\r\n  const handleChange = (event) => {\r\n    setMessage(event.target.value);\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   fetchHistory()\r\n  // }, [data]);\r\n\r\n  const handleKeyDown = (event) => {\r\n    const current = new Date();\r\n    const currentTime = current.toLocaleTimeString(\"en-US\");\r\n    const API = \"chat/\" + chatID + \"/post_chat\"\r\n    if(event.key === 'Enter') {\r\n      fetch(API, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n\r\n          chat: event.target.value,\r\n          type: algo,\r\n          \r\n        }),\r\n        headers: {\"Content-Type\" : \"application/json\"}\r\n      })\r\n      console.log(\"Dari input bar: \");\r\n      console.log(chatID);\r\n      console.log(\"Entered chat: \" + event.target.value);\r\n      event.target.value = \"\"\r\n      setTrigger((trigger) => trigger + 1)\r\n      triggerSignal(trigger)\r\n      console.log(\"REQUETS HAS BEEN SENT\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='inputbar'>\r\n        <input type='text' name=\"message\" placeholder='Masukan pertanyaan disini' onChange={handleChange} onKeyDown={handleKeyDown}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputBar","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\Conversation.jsx",["98","99","100","101"],[],"import React from 'react'\r\nimport MessageBubbleRight from './MessageBubbleRight'\r\nimport MessageBubbleLeft from './MessageBubbleLeft'\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Conversation({chatID, triggerSignal}) {\r\n  // const [file, getFile] = useState\r\n  const[data, setData] = useState('');\r\n  const API = 'chat/' + chatID\r\n  const[trigger, setTrigger] = useState(triggerSignal)\r\n\r\n  const dataFetch = async () => {\r\n    const fetched = await (await fetch(API)).json();\r\n\r\n    setData(fetched.chats);\r\n    //console.log(\"CONVERSATION ID: \" + chatID)\r\n    console.log(fetched);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dataFetch();\r\n\r\n    const interval = setInterval(() => {\r\n      console.log('This will be called every 1 seconds');\r\n      dataFetch();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n    console.log(\"CHANGED\")\r\n    // fetchChats()\r\n  }, [data]);\r\n\r\n  // useEffect(() => {\r\n    \r\n  //   dataFetch();\r\n  // },[triggerSignal])\r\n\r\n  // while(!data){\r\n  //   console.log(\"Fetching failed conversation data\")\r\n  //   fetchChats()\r\n  // }\r\n\r\n\r\n\r\n  // const dataToMessage = () => {\r\n  //   setData({parentToChild});\r\n  // }\r\n\r\n  return (\r\n    <div className='conversation'>\r\n      {\r\n        data && data.map((item) => {\r\n            if(item.from === \"user\"){\r\n              return <MessageBubbleRight dataToMessage={item.chat}/>\r\n            }else{\r\n              return <MessageBubbleLeft dataToMessage={item.chat}/>\r\n            }\r\n          \r\n        })\r\n      }\r\n        <div className='flex-container'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Conversation","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\History.jsx",["102","103","104"],[],"import React, { useReducer } from 'react'\r\nimport HistoryTab from './HistoryTab'\r\nimport { useState, useEffect} from 'react';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  post: {}\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  if(action.type == 'SUCCESS'){\r\n    return {\r\n      loading: false,\r\n      post: action.payload\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\nfunction History({chatHistory}) {\r\n  const[data, setData] = useState([]);\r\n  const[state, dispatch] = useReducer(reducer, initialState)\r\n  const API = 'chat'\r\n\r\n  useEffect(() => {\r\n    const dataFetch = async () => {\r\n      const fetched = await (await fetch(API)).json();\r\n\r\n      setData(fetched.history);\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      console.log('This will be called every 1 seconds');\r\n      dataFetch();\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <div className='history'>\r\n        <div className='history-text'>History</div>\r\n        <div className='history-container'>\r\n          {\r\n            data && data.map((item) => {\r\n              return <HistoryTab HistoryData={item} historyDesc={chatHistory}/>\r\n            })\r\n          } \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default History","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\MessageBubbleRight.jsx",[],[],"D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\MessageBubbleLeft.jsx",["105"],[],"import React from 'react'\r\nimport { useState } from 'react';\r\n\r\nfunction MessageBubbleLeft({dataToMessage}) {\r\n  return (\r\n    <div className='messagebubble'>\r\n        <p>{dataToMessage}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default MessageBubbleLeft","D:\\Kuliah\\SMT 4\\Stima\\Tubes\\Tubes 3\\fe-tubes3\\src\\component\\HistoryTab.jsx",["106"],[],"import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction HistoryTab({HistoryData, historyDesc}) {\r\n  const navigate = useNavigate()\r\n  const navigateLink = \"/\" + HistoryData.id\r\n  const homeLink = \"/\"\r\n  const API = \"chat/\" + HistoryData.id + \"/delete_chat\"\r\n\r\n  const deleteRequest = async() => {\r\n    //console.log(\"fetch history before\")\r\n    await fetch(API, { method: 'DELETE'})\r\n    navigate(homeLink)\r\n  }\r\n  \r\n  const historyClicked = () => {\r\n    console.log(\"CLICKED\")\r\n    console.log(\"History \" + HistoryData.id + \" has been clicked\")\r\n    navigate(navigateLink)\r\n  }\r\n\r\n  // Current session\r\n  if(HistoryData.id === historyDesc.id){\r\n    return (\r\n      <div className='text-container current' key={HistoryData.id}>\r\n        <div className='history-tab'>\r\n            {HistoryData.lastChat}\r\n        </div>\r\n        <button onClick={deleteRequest}>Clear</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Not current session\r\n  return (\r\n    <div className='text-container' key={HistoryData.id}>\r\n      <div className='history-tab' onClick={historyClicked}>\r\n          {HistoryData.lastChat==\" \" ? \"This is a new chat!\" : HistoryData.lastChat}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HistoryTab",{"ruleId":"107","severity":1,"message":"108","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":42},{"ruleId":"107","severity":1,"message":"111","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":15},{"ruleId":"107","severity":1,"message":"112","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":12},{"ruleId":"107","severity":1,"message":"113","line":7,"column":9,"nodeType":"109","messageId":"110","endLine":7,"endColumn":20},{"ruleId":"107","severity":1,"message":"114","line":27,"column":9,"nodeType":"109","messageId":"110","endLine":27,"endColumn":13},{"ruleId":"107","severity":1,"message":"115","line":31,"column":9,"nodeType":"109","messageId":"110","endLine":31,"endColumn":12},{"ruleId":"107","severity":1,"message":"116","line":31,"column":14,"nodeType":"109","messageId":"110","endLine":31,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":54,"column":6,"nodeType":"119","endLine":54,"endColumn":8,"suggestions":"120"},{"ruleId":"107","severity":1,"message":"121","line":7,"column":9,"nodeType":"109","messageId":"110","endLine":7,"endColumn":13},{"ruleId":"107","severity":1,"message":"122","line":25,"column":11,"nodeType":"109","messageId":"110","endLine":25,"endColumn":20},{"ruleId":"117","severity":1,"message":"123","line":33,"column":6,"nodeType":"119","endLine":33,"endColumn":8,"suggestions":"124"},{"ruleId":"107","severity":1,"message":"125","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"126","line":8,"column":9,"nodeType":"109","messageId":"110","endLine":8,"endColumn":13},{"ruleId":"107","severity":1,"message":"127","line":11,"column":9,"nodeType":"109","messageId":"110","endLine":11,"endColumn":22},{"ruleId":"107","severity":1,"message":"128","line":15,"column":9,"nodeType":"109","messageId":"110","endLine":15,"endColumn":22},{"ruleId":"107","severity":1,"message":"121","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":14},{"ruleId":"107","severity":1,"message":"129","line":4,"column":16,"nodeType":"109","messageId":"110","endLine":4,"endColumn":23},{"ruleId":"107","severity":1,"message":"125","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"130","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":18},{"ruleId":"107","severity":1,"message":"131","line":5,"column":20,"nodeType":"109","messageId":"110","endLine":5,"endColumn":31},{"ruleId":"107","severity":1,"message":"132","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":17},{"ruleId":"107","severity":1,"message":"133","line":18,"column":11,"nodeType":"109","messageId":"110","endLine":18,"endColumn":22},{"ruleId":"107","severity":1,"message":"134","line":10,"column":9,"nodeType":"109","messageId":"110","endLine":10,"endColumn":16},{"ruleId":"107","severity":1,"message":"135","line":10,"column":18,"nodeType":"109","messageId":"110","endLine":10,"endColumn":28},{"ruleId":"136","severity":1,"message":"137","line":29,"column":5,"nodeType":"138","messageId":"139","endLine":29,"endColumn":27},{"ruleId":"117","severity":1,"message":"140","line":31,"column":6,"nodeType":"119","endLine":31,"endColumn":12,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":11,"column":18,"nodeType":"144","messageId":"145","endLine":11,"endColumn":20},{"ruleId":"107","severity":1,"message":"146","line":22,"column":9,"nodeType":"109","messageId":"110","endLine":22,"endColumn":14},{"ruleId":"107","severity":1,"message":"147","line":22,"column":16,"nodeType":"109","messageId":"110","endLine":22,"endColumn":24},{"ruleId":"107","severity":1,"message":"148","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":18},{"ruleId":"142","severity":1,"message":"143","line":40,"column":32,"nodeType":"144","messageId":"145","endLine":40,"endColumn":34},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Sidebar' is defined but never used.","'Chat' is defined but never used.","'useDispatch' is defined but never used.","'time' is assigned a value but never used.","'req' is assigned a value but never used.","'setReq' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'algo' is assigned a value but never used.","'dataFetch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.id' and 'fetchHistory'. Either include them or remove the dependency array.",["150"],"'useEffect' is defined but never used.","'data' is assigned a value but never used.","'parentToChild' is assigned a value but never used.","'childToParent' is assigned a value but never used.","'setAlgo' is assigned a value but never used.","'dataAlgo' is assigned a value but never used.","'setDataAlgo' is assigned a value but never used.","'message' is assigned a value but never used.","'currentTime' is assigned a value but never used.","'trigger' is assigned a value but never used.","'setTrigger' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has a missing dependency: 'dataFetch'. Either include it or remove the dependency array.",["151"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useState' is defined but never used.",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [data]",{"range":"158","text":"159"},"Update the dependencies array to be: [data.id, fetchHistory]",{"range":"160","text":"161"},"Update the dependencies array to be: [data, dataFetch]",{"range":"162","text":"163"},[1371,1373],"[data]",[937,939],"[data.id, fetchHistory]",[881,887],"[data, dataFetch]"]